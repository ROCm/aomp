#Copyright (c) 2018, Lawrence Livermore National Security, LLC All rights
#reserved.

#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:

#Redistributions of source code must retain the above copyright notice, this list
#of conditions and the following disclaimer.

#Redistributions in binary form must reproduce the above copyright notice, this
#list of conditions and the following disclaimer in the documentation and/or
#other materials provided with the distribution.

#Neither the name of the copyright holder nor the names of its contributors may
#be used to endorse or promote products derived from this software without
#specific prior written permission.

#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Set BASE_PATH for AOMP or ROCm
ifeq (opt,$(findstring opt,$(AOMP)))
  BASE_PATH     := $(shell dirname $(AOMP))
  INSTALLED_GPU := $(shell $(AOMP)/../bin/rocm_agent_enumerator | grep -m 1 -E gfx[^0]{1}.{2})
  COMPILERID    := rocm$(shell $(AOMP)/bin/clang --version | grep -oE "\-[0-9]*\.[0-9]*\.[0-9]*\s")
else
BASE_PATH       := $(AOMP)
  INSTALLED_GPU := $(shell $(AOMP)/bin/offload-arch)
  ifeq (aomp_,$(findstring aomp_,$(AOMP)))
    VERSION     := $(shell echo $(AOMP) | grep -oE "aomp_.*")
    COMPILERID  := $(VERSION)
  else
    VERSION     := $(shell $(AOMP)/bin/clang --version | grep -oE "[0-9]*\.[0-9]*-[0-9]*")
    COMPILERID  := aomp_$(VERSION)
  endif
endif

AOMP_GPU       ?= $(INSTALLED_GPU)
COMP_VERSION   :=
MPIVERSION     :=
ROCMVERSION    :=
COMP_ROCM_PATH :=
CXX_GPU_ARCH   := $(AOMP_GPU)
FC_GPU_ARCH    := $(AOMP_GPU)
DEFAULT_CXX              := $(AOMP)/bin/clang++
DEFAULT_FC               := $(AOMP)/bin/flang
DEFAULT_MPICXX           :=
DEFAULT_MPIFC            :=
DEFAULT_CPPFLAGS         :=
DEFAULT_HIP_CPPFLAGS     := -D__HIP_PLATFORM_AMD__ -I$(BASE_PATH)/include
DEFAULT_CXXFLAGS         := -O3 -g
DEFAULT_CXXFLAGS_GPU_OMP := -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=$(CXX_GPU_ARCH)
DEFAULT_HIP_CXXFLAGS     := --offload-arch=$(CXX_GPU_ARCH) -std=c++11 --rocm-path=$(BASE_PATH) -x hip -mllvm -amdgpu-early-inline-all=true -mllvm -amdgpu-function-calls=false -fhip-new-launch-api --driver-mode=g++
DEFAULT_CXX_LDFLAGS      :=
DEFAULT_CXX_LDLIBS       :=
DEFAULT_CXX_HIP_LDFLAGS  := -L$(BASE_PATH)/lib
DEFAULT_CXX_HIP_LDLIBS   := -lamdhip64
DEFAULT_FCFLAGS          := -O3 -g
DEFAULT_FCFLAGS_GPU_OMP  := -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=$(CXX_GPU_ARCH)
DEFAULT_FC_LDFLAGS       := -lflang -lflangrti
DEFAULT_FC_LDLIBS        :=
DEFAULT_COMPILERID       := $(COMPILERID)

COMPILERID_CPU_SERIAL := $(DEFAULT_COMPILERID)
CXX_CPU_SERIAL :=        $(DEFAULT_CXX)
CPPFLAGS_CPU_SERIAL :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_CPU_SERIAL :=   $(DEFAULT_CXXFLAGS)
LDFLAGS_CPU_SERIAL :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_CPU_SERIAL :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_CPU_SERIAL_FORT := $(DEFAULT_COMPILERID)
FC_CPU_SERIAL_FORT :=         $(DEFAULT_FC)
CPPFLAGS_CPU_SERIAL_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_CPU_SERIAL_FORT :=    $(DEFAULT_FCFLAGS)
LDFLAGS_CPU_SERIAL_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_CPU_SERIAL_FORT :=     $(DEFAULT_FC_LDLIBS)

COMPILERID_CPU_SERIAL_MPI := $(DEFAULT_COMPILERID)
CXX_CPU_SERIAL_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_CPU_SERIAL_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_CPU_SERIAL_MPI :=   $(DEFAULT_CXXFLAGS)
LDFLAGS_CPU_SERIAL_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_CPU_SERIAL_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_CPU_SERIAL_MPI_FORT := $(DEFAULT_COMPILERID)
FC_CPU_SERIAL_MPI_FORT :=         $(DEFAULT_MPIFC)
CPPFLAGS_CPU_SERIAL_MPI_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_CPU_SERIAL_MPI_FORT :=    $(DEFAULT_FCFLAGS)
LDFLAGS_CPU_SERIAL_MPI_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_CPU_SERIAL_MPI_FORT :=    $(DEFAULT_FC_LDLIBS)

COMPILERID_CPU_OMP := $(DEFAULT_COMPILERID)
CXX_CPU_OMP :=        $(DEFAULT_CXX)
CPPFLAGS_CPU_OMP :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_CPU_OMP :=   $(DEFAULT_CXXFLAGS) -fopenmp
LDFLAGS_CPU_OMP :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_CPU_OMP :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_CPU_OMP_FORT := $(DEFAULT_COMPILERID)
FC_CPU_OMP_FORT :=         $(DEFAULT_FC)
CPPFLAGS_CPU_OMP_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_CPU_OMP_FORT :=    $(DEFAULT_FCFLAGS) -fopenmp
LDFLAGS_CPU_OMP_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_CPU_OMP_FORT :=    $(DEFAULT_FC_LDLIBS)

COMPILERID_CPU_OMP_MPI := $(DEFAULT_COMPILERID)
CXX_CPU_OMP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_CPU_OMP_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_CPU_OMP_MPI :=   $(DEFAULT_CXXFLAGS) -fopenmp
LDFLAGS_CPU_OMP_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_CPU_OMP_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_CPU_OMP_MPI_FORT := $(DEFAULT_COMPILERID)
FC_CPU_OMP_MPI_FORT :=         $(DEFAULT_MPIFC)
CPPFLAGS_CPU_OMP_MPI_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_CPU_OMP_MPI_FORT :=    $(DEFAULT_FCFLAGS) -fopenmp
LDFLAGS_CPU_OMP_MPI_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_CPU_OMP_MPI_FORT :=    $(DEFAULT_FC_LDLIBS)

COMPILERID_GPU_OMP := $(DEFAULT_COMPILERID)
CXX_GPU_OMP :=        $(DEFAULT_CXX)
CPPFLAGS_GPU_OMP :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_OMP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP)
LDFLAGS_GPU_OMP :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_OMP :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_OMP_FORT := $(DEFAULT_COMPILERID)
FC_GPU_OMP_FORT :=         $(DEFAULT_FC)
CPPFLAGS_GPU_OMP_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_GPU_OMP_FORT :=    $(DEFAULT_FCFLAGS) $(DEFAULT_FCFLAGS_GPU_OMP)
LDFLAGS_GPU_OMP_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_GPU_OMP_FORT :=    $(DEFAULT_FC_LDLIBS)

COMPILERID_GPU_OMP_MPI := $(DEFAULT_COMPILERID)
CXX_GPU_OMP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_GPU_OMP_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_OMP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP)
LDFLAGS_GPU_OMP_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_OMP_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_OMP_MPI_FORT := $(DEFAULT_COMPILERID)
FC_GPU_OMP_MPI_FORT :=         $(DEFAULT_MPIFC)
CPPFLAGS_GPU_OMP_MPI_FORT :=   $(DEFAULT_CPPFLAGS)
FCFLAGS_GPU_OMP_MPI_FORT :=    $(DEFAULT_FCFLAGS) $(DEFAULT_FCFLAGS_GPU_OMP)
LDFLAGS_GPU_OMP_MPI_FORT :=    $(DEFAULT_FC_LDFLAGS)
LDLIBS_GPU_OMP_MPI_FORT :=    $(DEFAULT_FC_LDLIBS)

COMPILERID_GPU_HIP := $(DEFAULT_COMPILERID)
CXX_GPU_HIP :=        $(DEFAULT_CXX)
CPPFLAGS_GPU_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_HIP_CXXFLAGS)
LDFLAGS_GPU_HIP :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_HIP :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_GPU_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_GPU_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_HIP_CXXFLAGS)
LDFLAGS_GPU_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_LAMBDA_HIP := $(DEFAULT_COMPILERID)
CXX_GPU_LAMBDA_HIP :=        $(DEFAULT_CXX)
CPPFLAGS_GPU_LAMBDA_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_LAMBDA_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_HIP_CXXFLAGS)
LDFLAGS_GPU_LAMBDA_HIP :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_LAMBDA_HIP :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_LAMBDA_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_GPU_LAMBDA_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_GPU_LAMBDA_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_LAMBDA_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_HIP_CXXFLAGS)
LDFLAGS_GPU_LAMBDA_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_LAMBDA_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_OMP_HIP := $(DEFAULT_COMPILERID)
CXX_GPU_OMP_HIP :=        $(DEFAULT_CXX)
CPPFLAGS_GPU_OMP_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_OMP_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP) # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_GPU_OMP_HIP :=    $(DEFAULT_CXX_LDFLAGS) $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_GPU_OMP_HIP :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS)

# Compiles OpenMP GPU kernels but ONLY links in hip ABI
COMPILERID_GPU_OMP_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_GPU_OMP_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_GPU_OMP_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_GPU_OMP_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP) # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_GPU_OMP_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS) $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_GPU_OMP_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS) -lmpifort_cray


# For now use nvcc, no place to test cray nvidia support right now
COMPILERID_GPU_CUDA := nvcc
CXX_GPU_CUDA :=        nvcc
CPPFLAGS_GPU_CUDA :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_CUDA :=   $(DEFAULT_CXXFLAGS) -std=c++11 -x cu
LDFLAGS_GPU_CUDA :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_CUDA :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_CUDA_MPI := nvcc
CXX_GPU_CUDA_MPI :=        nvcc
CPPFLAGS_GPU_CUDA_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_CUDA_MPI :=   $(DEFAULT_CXXFLAGS) -std=c++11 -x cu -ccbin mpicxx
LDFLAGS_GPU_CUDA_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_CUDA_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_LAMBDA_CUDA := nvcc
CXX_GPU_LAMBDA_CUDA :=        nvcc
CPPFLAGS_GPU_LAMBDA_CUDA :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_LAMBDA_CUDA :=   $(DEFAULT_CXXFLAGS) -std=c++11 -x cu --expt-extended-lambda
LDFLAGS_GPU_LAMBDA_CUDA :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_LAMBDA_CUDA :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_GPU_LAMBDA_CUDA_MPI := nvcc
CXX_GPU_LAMBDA_CUDA_MPI :=        nvcc
CPPFLAGS_GPU_LAMBDA_CUDA_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_GPU_LAMBDA_CUDA_MPI :=   $(DEFAULT_CXXFLAGS)
LDFLAGS_GPU_LAMBDA_CUDA_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_GPU_LAMBDA_CUDA_MPI :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_INTEROP2_CPU_OMP := $(DEFAULT_COMPILERID)
CXX_INTEROP2_CPU_OMP :=        $(DEFAULT_FC)
CPPFLAGS_INTEROP2_CPU_OMP :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_INTEROP2_CPU_OMP :=   $(DEFAULT_CXXFLAGS) -fopenmp
LDFLAGS_INTEROP2_CPU_OMP :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_INTEROP2_CPU_OMP :=     $(DEFAULT_CXX_LDLIBS)

COMPILERID_INTEROP2_CPU_OMP_MPI := $(DEFAULT_COMPILERID)
CXX_INTEROP2_CPU_OMP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_INTEROP2_CPU_OMP_MPI :=   $(DEFAULT_CPPFLAGS)
CXXFLAGS_INTEROP2_CPU_OMP_MPI :=   $(DEFAULT_CXXFLAGS) -fopenmp
LDFLAGS_INTEROP2_CPU_OMP_MPI :=    $(DEFAULT_CXX_LDFLAGS)
LDLIBS_INTEROP2_CPU_OMP_MPI :=     $(DEFAULT_CXX_LDLIBS) -lmpifort_cray

COMPILERID_INTEROP1_GPU_OMP_HIP := $(DEFAULT_COMPILERID)
CXX_INTEROP1_GPU_OMP_HIP :=        $(DEFAULT_FC)
CPPFLAGS_INTEROP1_GPU_OMP_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP1_GPU_OMP_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP) # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP1_GPU_OMP_HIP :=    $(DEFAULT_CXX_LDFLAGS) $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP1_GPU_OMP_HIP :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS)

COMPILERID_INTEROP1_GPU_OMP_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_INTEROP1_GPU_OMP_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_INTEROP1_GPU_OMP_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP1_GPU_OMP_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP)  # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP1_GPU_OMP_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS)  $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP1_GPU_OMP_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS) -lmpifort_cray

COMPILERID_INTEROP1.5_GPU_OMP_HIP := $(DEFAULT_COMPILERID)
CXX_INTEROP1.5_GPU_OMP_HIP :=        $(DEFAULT_FC)
CPPFLAGS_INTEROP1.5_GPU_OMP_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP1.5_GPU_OMP_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP) # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP1.5_GPU_OMP_HIP :=    $(DEFAULT_CXX_LDFLAGS) $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP1.5_GPU_OMP_HIP :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS) $(DEFAULT_FC_LDFLAGS)

COMPILERID_INTEROP1.5_GPU_OMP_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_INTEROP1.5_GPU_OMP_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_INTEROP1.5_GPU_OMP_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP1.5_GPU_OMP_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP)  # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP1.5_GPU_OMP_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS)  $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP1.5_GPU_OMP_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS) -lmpifort_cray

COMPILERID_INTEROP2_GPU_OMP_HIP := $(DEFAULT_COMPILERID)
CXX_INTEROP2_GPU_OMP_HIP :=        $(DEFAULT_FC)
CPPFLAGS_INTEROP2_GPU_OMP_HIP :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP2_GPU_OMP_HIP :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP) # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP2_GPU_OMP_HIP :=    $(DEFAULT_CXX_LDFLAGS) $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP2_GPU_OMP_HIP :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS)

COMPILERID_INTEROP2_GPU_OMP_HIP_MPI := $(DEFAULT_COMPILERID)
CXX_INTEROP2_GPU_OMP_HIP_MPI :=        $(DEFAULT_MPICXX)
CPPFLAGS_INTEROP2_GPU_OMP_HIP_MPI :=   $(DEFAULT_CPPFLAGS) $(DEFAULT_HIP_CPPFLAGS)
CXXFLAGS_INTEROP2_GPU_OMP_HIP_MPI :=   $(DEFAULT_CXXFLAGS) $(DEFAULT_CXXFLAGS_GPU_OMP)  # Don't invoke GPU_OMP and HIP mode at same time!
LDFLAGS_INTEROP2_GPU_OMP_HIP_MPI :=    $(DEFAULT_CXX_LDFLAGS)  $(DEFAULT_CXX_HIP_LDFLAGS)
LDLIBS_INTEROP2_GPU_OMP_HIP_MPI :=     $(DEFAULT_CXX_LDLIBS) $(DEFAULT_CXX_HIP_LDLIBS) -lmpifort_cray


# Used by generate_source to query all the settings above to build Makefiles
print-%  : ; @echo $($*)
