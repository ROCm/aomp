
//  Header file: overload_to_externs.h
//               generated by utility gen_externs

#define _CD double _Complex
#define _CF float _Complex
#define _UI unsigned int
#define _UL unsigned long
#define _INLINE_ATTR_ __attribute__((flatten, always_inline))

// Headers for extern xteamr functions defined in libomptarget DeviceRTL
// are defined here in the test header file because user apps cannot include
// the DeviceRTL Interface.h header file.

#if defined(__AMDGCN__) || defined(__NVPTX__)
extern "C" {
#define _RF_LDS volatile __attribute__((address_space(3)))
void _INLINE_ATTR_  __kmpc_xteamr_d_16x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_16x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_16x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_16x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_16x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_16x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_16x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_16x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_8x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_8x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_8x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_8x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_8x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_8x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_8x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_8x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_4x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_4x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_4x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_4x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_4x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_4x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_4x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_4x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_2x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_2x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_2x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_2x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_2x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_2x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_2x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_2x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_1x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_1x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_1x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_1x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_1x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_1x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_1x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_1x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_32x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_32x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_32x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_32x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_32x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_32x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_32x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_32x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_16x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_16x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_16x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_16x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_16x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_16x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_16x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_16x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_8x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_8x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_8x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_8x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_8x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_8x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_8x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_8x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_4x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_4x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_4x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_4x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_4x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_4x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_4x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_4x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_d_2x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_f_2x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cd_2x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_cf_2x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_i_2x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ui_2x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_l_2x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams);
void _INLINE_ATTR_  __kmpc_xteamr_ul_2x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams);
void __kmpc_rfun_sum_d(double *val, double otherval);
void __kmpc_rfun_sum_lds_d(_RF_LDS double *val, _RF_LDS double *otherval);
void __kmpc_rfun_sum_f(float *val, float otherval);
void __kmpc_rfun_sum_lds_f(_RF_LDS float *val, _RF_LDS float *otherval);
void __kmpc_rfun_sum_cd(_CD *val, _CD otherval);
void __kmpc_rfun_sum_lds_cd(_RF_LDS _CD *val, _RF_LDS _CD *otherval);
void __kmpc_rfun_sum_cf(_CF *val, _CF otherval);
void __kmpc_rfun_sum_lds_cf(_RF_LDS _CF *val, _RF_LDS _CF *otherval);
void __kmpc_rfun_sum_i(int *val, int otherval);
void __kmpc_rfun_sum_lds_i(_RF_LDS int *val, _RF_LDS int *otherval);
void __kmpc_rfun_sum_ui(_UI *val, _UI otherval);
void __kmpc_rfun_sum_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval);
void __kmpc_rfun_sum_l(long *val, long otherval);
void __kmpc_rfun_sum_lds_l(_RF_LDS long *val, _RF_LDS long *otherval);
void __kmpc_rfun_sum_ul(_UL *val, _UL otherval);
void __kmpc_rfun_sum_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval);
void __kmpc_rfun_max_d(double *val, double otherval);
void __kmpc_rfun_max_lds_d(_RF_LDS double *val, _RF_LDS double *otherval);
void __kmpc_rfun_max_f(float *val, float otherval);
void __kmpc_rfun_max_lds_f(_RF_LDS float *val, _RF_LDS float *otherval);
void __kmpc_rfun_max_i(int *val, int otherval);
void __kmpc_rfun_max_lds_i(_RF_LDS int *val, _RF_LDS int *otherval);
void __kmpc_rfun_max_ui(_UI *val, _UI otherval);
void __kmpc_rfun_max_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval);
void __kmpc_rfun_max_l(long *val, long otherval);
void __kmpc_rfun_max_lds_l(_RF_LDS long *val, _RF_LDS long *otherval);
void __kmpc_rfun_max_ul(_UL *val, _UL otherval);
void __kmpc_rfun_max_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval);
void __kmpc_rfun_min_d(double *val, double otherval);
void __kmpc_rfun_min_lds_d(_RF_LDS double *val, _RF_LDS double *otherval);
void __kmpc_rfun_min_f(float *val, float otherval);
void __kmpc_rfun_min_lds_f(_RF_LDS float *val, _RF_LDS float *otherval);
void __kmpc_rfun_min_i(int *val, int otherval);
void __kmpc_rfun_min_lds_i(_RF_LDS int *val, _RF_LDS int *otherval);
void __kmpc_rfun_min_ui(_UI *val, _UI otherval);
void __kmpc_rfun_min_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval);
void __kmpc_rfun_min_l(long *val, long otherval);
void __kmpc_rfun_min_lds_l(_RF_LDS long *val, _RF_LDS long *otherval);
void __kmpc_rfun_min_ul(_UL *val, _UL otherval);
void __kmpc_rfun_min_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval);
#undef _RF_LDS
int __kmpc_get_warp_size();
} // end extern C

#else

// For host compilation, define null functions for host linking.

extern "C" {
#undef _RF_LDS
#define _RF_LDS
void  __kmpc_xteamr_d_16x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_16x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_16x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_16x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_16x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_16x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_16x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_16x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_8x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_8x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_8x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_8x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_8x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_8x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_8x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_8x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_4x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_4x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_4x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_4x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_4x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_4x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_4x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_4x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_2x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_2x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_2x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_2x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_2x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_2x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_2x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_2x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_1x64
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_1x64
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_1x64
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_1x64
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_1x64
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_1x64
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_1x64
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_1x64
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_32x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_32x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_32x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_32x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_32x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_32x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_32x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_32x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_16x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_16x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_16x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_16x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_16x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_16x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_16x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_16x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_8x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_8x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_8x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_8x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_8x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_8x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_8x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_8x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_4x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_4x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_4x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_4x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_4x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_4x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_4x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_4x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_d_2x32
   (double v, double *r_ptr, double *tvs, uint32_t *td, void (*_rf)(double *, double),
      void (*_rf_lds)(_RF_LDS double *, _RF_LDS double *), const double iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_f_2x32
   (float v, float *r_ptr, float *tvs, uint32_t *td, void (*_rf)(float *, float),
      void (*_rf_lds)(_RF_LDS float *, _RF_LDS float *), const float iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cd_2x32
   (_CD v, _CD *r_ptr, _CD *tvs, uint32_t *td, void (*_rf)(_CD *, _CD),
      void (*_rf_lds)(_RF_LDS _CD *, _RF_LDS _CD *), const _CD iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_cf_2x32
   (_CF v, _CF *r_ptr, _CF *tvs, uint32_t *td, void (*_rf)(_CF *, _CF),
      void (*_rf_lds)(_RF_LDS _CF *, _RF_LDS _CF *), const _CF iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_i_2x32
   (int v, int *r_ptr, int *tvs, uint32_t *td, void (*_rf)(int *, int),
      void (*_rf_lds)(_RF_LDS int *, _RF_LDS int *), const int iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ui_2x32
   (_UI v, _UI *r_ptr, _UI *tvs, uint32_t *td, void (*_rf)(_UI *, _UI),
      void (*_rf_lds)(_RF_LDS _UI *, _RF_LDS _UI *), const _UI iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_l_2x32
   (long v, long *r_ptr, long *tvs, uint32_t *td, void (*_rf)(long *, long),
      void (*_rf_lds)(_RF_LDS long *, _RF_LDS long *), const long iv,
      const uint64_t k, const uint32_t numteams){};
void  __kmpc_xteamr_ul_2x32
   (_UL v, _UL *r_ptr, _UL *tvs, uint32_t *td, void (*_rf)(_UL *, _UL),
      void (*_rf_lds)(_RF_LDS _UL *, _RF_LDS _UL *), const _UL iv,
      const uint64_t k, const uint32_t numteams){};
void __kmpc_rfun_sum_d(double *val, double otherval){}
void __kmpc_rfun_sum_lds_d(_RF_LDS double *val, _RF_LDS double *otherval){}
void __kmpc_rfun_sum_f(float *val, float otherval){}
void __kmpc_rfun_sum_lds_f(_RF_LDS float *val, _RF_LDS float *otherval){}
void __kmpc_rfun_sum_cd(_CD *val, _CD otherval){}
void __kmpc_rfun_sum_lds_cd(_RF_LDS _CD *val, _RF_LDS _CD *otherval){}
void __kmpc_rfun_sum_cf(_CF *val, _CF otherval){}
void __kmpc_rfun_sum_lds_cf(_RF_LDS _CF *val, _RF_LDS _CF *otherval){}
void __kmpc_rfun_sum_i(int *val, int otherval){}
void __kmpc_rfun_sum_lds_i(_RF_LDS int *val, _RF_LDS int *otherval){}
void __kmpc_rfun_sum_ui(_UI *val, _UI otherval){}
void __kmpc_rfun_sum_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval){}
void __kmpc_rfun_sum_l(long *val, long otherval){}
void __kmpc_rfun_sum_lds_l(_RF_LDS long *val, _RF_LDS long *otherval){}
void __kmpc_rfun_sum_ul(_UL *val, _UL otherval){}
void __kmpc_rfun_sum_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval){}
void __kmpc_rfun_max_d(double *val, double otherval){}
void __kmpc_rfun_max_lds_d(_RF_LDS double *val, _RF_LDS double *otherval){}
void __kmpc_rfun_max_f(float *val, float otherval){}
void __kmpc_rfun_max_lds_f(_RF_LDS float *val, _RF_LDS float *otherval){}
void __kmpc_rfun_max_i(int *val, int otherval){}
void __kmpc_rfun_max_lds_i(_RF_LDS int *val, _RF_LDS int *otherval){}
void __kmpc_rfun_max_ui(_UI *val, _UI otherval){}
void __kmpc_rfun_max_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval){}
void __kmpc_rfun_max_l(long *val, long otherval){}
void __kmpc_rfun_max_lds_l(_RF_LDS long *val, _RF_LDS long *otherval){}
void __kmpc_rfun_max_ul(_UL *val, _UL otherval){}
void __kmpc_rfun_max_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval){}
void __kmpc_rfun_min_d(double *val, double otherval){}
void __kmpc_rfun_min_lds_d(_RF_LDS double *val, _RF_LDS double *otherval){}
void __kmpc_rfun_min_f(float *val, float otherval){}
void __kmpc_rfun_min_lds_f(_RF_LDS float *val, _RF_LDS float *otherval){}
void __kmpc_rfun_min_i(int *val, int otherval){}
void __kmpc_rfun_min_lds_i(_RF_LDS int *val, _RF_LDS int *otherval){}
void __kmpc_rfun_min_ui(_UI *val, _UI otherval){}
void __kmpc_rfun_min_lds_ui(_RF_LDS _UI *val, _RF_LDS _UI *otherval){}
void __kmpc_rfun_min_l(long *val, long otherval){}
void __kmpc_rfun_min_lds_l(_RF_LDS long *val, _RF_LDS long *otherval){}
void __kmpc_rfun_min_ul(_UL *val, _UL otherval){}
void __kmpc_rfun_min_lds_ul(_RF_LDS _UL *val, _RF_LDS _UL *otherval){}
#undef _RF_LDS
int __kmpc_get_warp_size(){
  printf("ERROR: executing _kmpc_get_warp_size on host\n");
  return -1;}
} // end extern C

#endif  // of definitions for host null functions

// These overloaded function definitions are for this test framework 
// (xteamr.cpp) to invoke the extern DexviceRTL helper functions.

void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_1x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_1x64(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_32x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_32x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_16x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_8x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_4x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_d, __kmpc_rfun_sum_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_f, __kmpc_rfun_sum_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (_CD val, _CD *rv, _CD *tvs, uint32_t *td, const _CD iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cd_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cd, __kmpc_rfun_sum_lds_cd, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (_CF val, _CF *rv, _CF *tvs, uint32_t *td, const _CF iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_cf_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_cf, __kmpc_rfun_sum_lds_cf, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_i, __kmpc_rfun_sum_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ui, __kmpc_rfun_sum_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_l, __kmpc_rfun_sum_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_sum_2x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x32(val, rv, tvs, td,
      __kmpc_rfun_sum_ul, __kmpc_rfun_sum_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x64(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x64(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x64(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x64(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_1x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_1x64(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_32x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_32x32(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_16x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x32(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_8x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x32(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_4x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x32(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_d, __kmpc_rfun_max_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_f, __kmpc_rfun_max_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_i, __kmpc_rfun_max_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_ui, __kmpc_rfun_max_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_l, __kmpc_rfun_max_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_max_2x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x32(val, rv, tvs, td,
      __kmpc_rfun_max_ul, __kmpc_rfun_max_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x64(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x64(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x64(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x64(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_1x64
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_1x64(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_32x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_32x32(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_16x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_16x32(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_8x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_8x32(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_4x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_4x32(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (double val, double *rv, double *tvs, uint32_t *td, const double iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_d_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_d, __kmpc_rfun_min_lds_d, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (float val, float *rv, float *tvs, uint32_t *td, const float iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_f_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_f, __kmpc_rfun_min_lds_f, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (int val, int *rv, int *tvs, uint32_t *td, const int iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_i_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_i, __kmpc_rfun_min_lds_i, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (_UI val, _UI *rv, _UI *tvs, uint32_t *td, const _UI iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ui_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_ui, __kmpc_rfun_min_lds_ui, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (long val, long *rv, long *tvs, uint32_t *td, const long iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_l_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_l, __kmpc_rfun_min_lds_l, iv, k, numteams);}
void _INLINE_ATTR_ _overload_to_extern_min_2x32
   (_UL val, _UL *rv, _UL *tvs, uint32_t *td, const _UL iv, const uint64_t k, const uint32_t numteams)
   { __kmpc_xteamr_ul_2x32(val, rv, tvs, td,
      __kmpc_rfun_min_ul, __kmpc_rfun_min_lds_ul, iv, k, numteams);}
#undef _CD
#undef _CF
#undef _UI
#undef _UL
#undef _INLINE_ATTR_
